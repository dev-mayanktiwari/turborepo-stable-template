name: Build, Push and Deploy Server on Server Changes

on:
  push:
    branches:
      - main
    
jobs:
  check-server-changes:
    runs-on: ubuntu-latest
    outputs:
      server_affected: ${{ steps.check.outputs.server_affected }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Make script executable
        run: chmod +x ./scripts/check-server-changes.sh
        
      - name: Check if server is affected
        id: check
        run: ./scripts/check-server-changes.sh

  build-and-push:
    needs: check-server-changes
    if: needs.check-server-changes.outputs.server_affected == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker Image
        run: docker build --platform linux/amd64 -f apps/server/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/labelnet:latest .

      - name: Push the Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/labelnet:latest

  deploy: 
    needs: [check-server-changes, build-and-push]
    if: needs.check-server-changes.outputs.server_affected == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Ansible and SSHPass
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Generate hosts.ini from template
        run: |
          cd infra/ansible/
          sed -e "s/{{ server_ip }}/${{ secrets.SERVER_IP }}/g" \
              -e "s/{{ ansible_user }}/${{ secrets.SERVER_USER }}/g" \
              -e "s/{{ ansible_ssh_pass }}/${{ secrets.SERVER_PASSWORD }}/g" \
              hosts.ini > hosts_final.ini
              cat hosts_final.ini

      - name: Run Ansible playbook
        run: |
          cd infra/ansible/
          ansible-playbook -i hosts_final.ini deploy.yml \
            -e docker_username=${{ secrets.DOCKER_USERNAME }} \
            -e host_port=${{ secrets.LABELNET_APP_PORT }} \
            -e container_port=${{ secrets.LABELNET_CONTAINER_PORT }}
  
  skip-notification:
    needs: check-server-changes
    if: needs.check-server-changes.outputs.server_affected == 'false'
    runs-on: ubuntu-latest
    
    steps:
      - name: No deployment needed
        run: |
          echo "No server changes detected in this push"
          echo "You are a hero man"
          echo "This saves time and resources!"